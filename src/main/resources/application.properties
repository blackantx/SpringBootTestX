# ==============================================================
# = Applications
# ==============================================================
server.port=8081
spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/webcontent/
spring.thymeleaf.suffix=.html
 
spring.application.name=SpringBoot Apps


# ==============================================================
# = Data Source
# ==============================================================
spring.datasource.url = jdbc:mysql://localhost:3306/jun_insapidb?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
spring.datasource.username = jun
spring.datasource.password = Jun234

#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,\
#    org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,\
#    org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration,\
#    org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration

	
# ==============================================================
# = Keep the connection alive if idle for a long time (needed in production)
# ==============================================================
spring.datasource.testWhileIdle = true
spring.datasource.timeBetweenEvictionRunsMillis = 60000
spring.datasource.validationQuery = SELECT 1

# ==============================================================
# = Show or not log for each sql query
# ==============================================================
spring.jpa.show-sql = true

# ==============================================================
# = Hibernate ddl auto (create, create-drop, update, validate:agar data tidak dihapus )
# ==============================================================
spring.jpa.hibernate.ddl-auto = validate

# ==============================================================
# = The SQL dialect makes Hibernate generate better SQL for the chosen database
# ==============================================================
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
#spring.queries.users-query=select username, password, active from m_user where username=?
#spring.queries.roles-query=select u.username, r.role from m_user u inner join m_user_role ur on(u.user_id=ur.user_id) inner join m_role r on(ur.role_id=r.role_id) where u.username=?

//spring.queries.users-query=select username, password, active from m_user where username=?
//spring.queries.roles-query=select u.username, r.role from m_user u inner join m_user_role ur on(u.user_id=ur.user_id) inner join m_role r on(ur.role_id=r.role_id) where u.username=?
 
# ==============================================================
# = Initialize the database using data.sql script: always
# ==============================================================
spring.datasource.initialization-mode=

spring.http.multipart.max-file-size=10MB
spring.http.multipart.max-request-size=10MB

#spring.redis.host=localhost 	# Redis server host.
#spring.redis.password= 			# Login password of the redis server.
#spring.redis.port=6379 			# Redis server port.